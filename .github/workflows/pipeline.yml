name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  deploy-via-sftp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Stop pm2 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if pm2 describe api.library > /dev/null
            then
              pm2 delete api.library
            else
              echo "api.library does not exist"
            fi
            if pm2 describe library > /dev/null
            then
              pm2 delete library
            else
              echo "library does not exist"
            fi

      - name: Send Files to Server
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.USERNAME }}
          server: ${{ secrets.SERVER }}
          port: ${{ secrets.PORT }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: ./*
          remote_path: /var/www/library/
          args: '-o ConnectTimeout=30' 

      - name: Run PostgreSQL
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/library/database/
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            docker compose up -d
            docker image prune -f

      - name: Run Backend
        uses: appleboy/ssh-action@master 
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ../../var/www/library/backend/
            composer install
            export AUTH_JWKURI=${{ secrets.AUTH_JWKURI }}
            export AUTH_AUDIENCE=${{ secrets.AUTH_AUDIENCE }}
            export AUTH_ISSUER=${{ secrets.AUTH_ISSUER }}
            export DATABASE_URL=${{ secrets.DATABASE_URL }}
            export APP_SECRET=${{ secrets.APP_SECRET }}
            export APP_ENV=${{ secrets.APP_ENV }}
            pm2 start "symfony server:start --port=5601" --name "api.library"

      - name: Run Frontend
        uses: appleboy/ssh-action@master 
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ../../var/www/library/frontend/
            export AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}
            export AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}
            export AUTH0_ISSUER_BASE_URL=${{ secrets.AUTH0_ISSUER_BASE_URL }}
            export AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}
            export AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}
            npm install
            npm run build
            pm2 start npm --name "library" -- run start 